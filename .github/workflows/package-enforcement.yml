name: Package Enforcement of our own package.

on: push

####
# We run `yarn build` before running these in hopes that `uses: ./` runs based on this build
#
# I don't actually know if this worksâ€¦
####

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: 16
          cache: yarn

      - run: yarn install
      - run: yarn build

  actions_core:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: "Enforce Version"
        id: enforce
        uses: ./
        with:
          package: "@actions/core"
          range: "^1.5.0"

      - name: Debug
        if: always()
        run: |
          echo target_version: ${{ steps.enforce.outputs.target_version }}
          echo resolved_version: ${{ steps.enforce.outputs.resolved_version }}

  typescript:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: "Enforce Version"
        id: enforce
        uses: ./
        with:
          package: "typescript"
          range: "^4.4.0"

      - name: Debug
        if: always()
        run: |
          echo target_version: ${{ steps.enforce.outputs.target_version }}
          echo resolved_version: ${{ steps.enforce.outputs.resolved_version }}

  types_jest:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: "Enforce Version"
        id: enforce
        uses: ./
        with:
          package: "@types/jest"
          range: ">=26"

      - name: Debug
        if: always()
        run: |
          echo target_version: ${{ steps.enforce.outputs.target_version }}
          echo resolved_version: ${{ steps.enforce.outputs.resolved_version }}
